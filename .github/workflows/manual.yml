on:
  workflow_dispatch:
    inputs:
      k8s_cluster:
        type: choice
        description: Select a cluster to deploy
        required: true
        options:
        - dev
      var_file:
        type: choice
        description: 'Select value file to deploy'
        required: true
        options:
        - goquorum-validator.yml
      namespace:
        type: choice
        description: Select a namespace to deploy
        required: true
        options:
        - quorum
        - cicd
      image_tag:
        description: 'image tag to deploy'
        required: true
        default: 'v1.1.1'
      chart_deploy:
        type: choice
        description: Select chart to be deployed
        required: true
        options:
        - goquorum-node
      dry_run:
        type: boolean
        description: 'dryrun'
        required: true
        default: 'false'
      release_name:
        description: 'release_name'
        required: true
        default: ''          
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Create kube config
        run: |
          mkdir -p $HOME/.kube/
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl get node
      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.8.0-linux-amd64.tar.gz
          mv linux-amd64/helm /usr/local/bin/helm
          helm version
      - name: Lint helm charts
        run: helm lint ./charts/${{ github.event.inputs.chart_deploy }}/
      - name: Deploy
        run: |
          helm upgrade --install ${{ github.event.inputs.release_name }} ./charts/${{ github.event.inputs.chart_deploy }}/ -f ./values/${{ github.event.inputs.var_file }} \
            --namespace ${{ github.event.inputs.namespace }} --create-namespace \
            --set image.tag=${{ github.event.inputs.image_tag }} \
            --set quorumFlags.permissioned=true \
            --set quorumFlags.enhancedPermissioned=true \
            --set node.goquorum.p2p.nodePort=31111
